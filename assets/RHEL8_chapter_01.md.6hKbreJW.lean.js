import{_ as s,c as i,a0 as t,o as e}from"./chunks/framework.CGHvQLJz.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"RHEL8/chapter_01.md","filePath":"RHEL8/chapter_01.md"}'),l={name:"RHEL8/chapter_01.md"};function n(h,a,p,r,o,k){return e(),i("div",null,a[0]||(a[0]=[t(`<h2 id="_1-1-准备所需的工具" tabindex="-1">1.1 准备所需的工具 <a class="header-anchor" href="#_1-1-准备所需的工具" aria-label="Permalink to &quot;1.1 准备所需的工具&quot;">​</a></h2><ol><li>VMware Workstation Pro</li><li>SecureCRT + SecureFX</li></ol><h2 id="_1-2-安装及配置vm虚拟机" tabindex="-1">1.2 安装及配置VM虚拟机 <a class="header-anchor" href="#_1-2-安装及配置vm虚拟机" aria-label="Permalink to &quot;1.2 安装及配置VM虚拟机&quot;">​</a></h2><h2 id="_1-3-安装linux系统" tabindex="-1">1.3 安装Linux系统 <a class="header-anchor" href="#_1-3-安装linux系统" aria-label="Permalink to &quot;1.3 安装Linux系统&quot;">​</a></h2><h3 id="_1-3-1-以gpt格式安装系统" tabindex="-1">1.3.1 以gpt格式安装系统 <a class="header-anchor" href="#_1-3-1-以gpt格式安装系统" aria-label="Permalink to &quot;1.3.1 以gpt格式安装系统&quot;">​</a></h3><ol><li><p>上下键选择【 Install Red Hat Enterprise Linux 8 】选项</p></li><li><p>按下【 Table 】键</p></li><li><p>光标移至最后追加如下参数：</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">inst.gpt</span></span></code></pre></div><h2 id="_1-4-设置启动模式为纯文本模式" tabindex="-1">1.4 设置启动模式为纯文本模式 <a class="header-anchor" href="#_1-4-设置启动模式为纯文本模式" aria-label="Permalink to &quot;1.4  设置启动模式为纯文本模式&quot;">​</a></h2><p>在命令行终端下，运行以下命令</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multi-user.target</span></span></code></pre></div><h2 id="_1-5-重置root密码" tabindex="-1">1.5 重置root密码 <a class="header-anchor" href="#_1-5-重置root密码" aria-label="Permalink to &quot;1.5  重置root密码&quot;">​</a></h2><ol><li><p>重启Linux系统，在引导选择界面，按下 e 键到内核编辑界面</p></li><li><p>在linux参数这行的最后追加 “rd.break” 参数，然后按下 Ctrl +X 组合键来运行修改过的内核程序</p></li><li><p>依次输入以下命令，等待系统重启完毕，然后就可以使用新的密码来登录Linux系统了</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remount,rw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /sysroot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    以读写模式重新挂载根分区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chroot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /sysroot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">              切换到系统真正的根目录下sysroot（/）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">passwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                           重置密码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /.autorelabel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         这将导致整个文件系统被“重新标记”，在下次重新启动时向</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SELinux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 发出信号，表明文件系统已更改（更改的密码）并允许加载更改</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reboot</span></span></code></pre></div>`,13)]))}const F=s(l,[["render",n]]);export{c as __pageData,F as default};
